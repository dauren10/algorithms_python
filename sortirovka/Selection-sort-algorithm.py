'''
Сортировка выбором — это простой и эффективный алгоритм сортировки, который работает путем многократного выбора наименьшего (или самого большого) элемента из несортированной части списка и перемещения его в отсортированную часть списка. Алгоритм многократно выбирает наименьший (или наибольший) элемент из несортированной части списка и меняет его местами с первым элементом несортированной части. Этот процесс повторяется для оставшейся несортированной части списка, пока весь список не будет отсортирован. Один вариант сортировки выбором называется «двунаправленная сортировка выбора», которая проходит по списку элементов, чередуя наименьший и наибольший элемент, таким образом, алгоритм может быть быстрее в некоторых случаях.

Алгоритм поддерживает два подмассива в заданном массиве.

    Подмассив, который уже отсортирован.
    Оставшийся подмассив был несортированным.

На каждой итерации сортировки выбором минимальный элемент (с учетом возрастания) из несортированного подмассива выбирается и перемещается в начало несортированного подмассива.

После каждой итерации размер отсортированного подмассива увеличивается на единицу, а размер несортированного подмассива уменьшается на единицу.
'''

# Python program for implementation of Selection
# Sort
import sys
A = [64, 25, 12, 22, 11]

# Traverse through all array elements
for i in range(len(A)):
	
	# Find the minimum element in remaining
	# unsorted array
	min_idx = i
	for j in range(i+1, len(A)):
		if A[min_idx] > A[j]:
			min_idx = j
			
	# Swap the found minimum element with
	# the first element	
	A[i], A[min_idx] = A[min_idx], A[i]

# Driver code to test above
print ("Sorted array")
for i in range(len(A)):
	print("%d" %A[i],end=" ")
