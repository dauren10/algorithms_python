'''
Алгоритм Кадане — один из известных подходов к решению задачи с помощью динамического программирования. 
Как мы все знаем, задача о максимальном подмассиве — одна из самых известных задач в области динамического программирования. 
Вы, должно быть, думаете, что задача кажется простой, а ее результатом будет сумма всех элементов массива. Но это неправильно. 
В массиве будут отрицательные целые элементы, которые могут уменьшить сумму всего массива. Поэтому для решения этой задачи воспользуемся алгоритмом Кадане.

Здесь алгоритм найдет непрерывный подмассив в одномерном целочисленном массиве, который имеет наибольшую возможную сумму. 
Первым подходом для всех после понимания постановки задачи будет применение подхода грубой силы и решение проблемы. 
Но при этом временная сложность решения будет O(n2), что не очень хорошо. Поэтому мы применим алгоритм кадане, который решает проблему
 путем обхода всего массива с использованием двух переменных для отслеживания суммы на данный момент и максимальной суммы. 
Самое главное, на что следует обратить внимание при использовании этого алгоритма, — это условие, с помощью которого мы будем обновлять обе переменные.
'''
def maxSubArraySum(arr,size):
    
    max_till_now = arr[0]
    max_ending = 0
    
    for i in range(0, size):
        max_ending = max_ending + arr[i]
        if max_ending < 0:
            max_ending = 0
        
        
        elif (max_till_now < max_ending):
            max_till_now = max_ending
            
    return max_till_now

arr = [-2, -3, 4, -1, -2, 5, -3]
print("Maximum Sub Array Sum Is" , maxSubArraySum(arr,len(arr)))